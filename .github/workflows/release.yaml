name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # Trigger on version tags like v1.0.0

permissions:
  contents: write # Needed to create releases and upload assets

jobs:
  build:
    name: Build for ${{ matrix.os }}/${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            binary_name: imagego-linux-amd64
          - os: windows
            arch: amd64
            binary_name: imagego-windows-amd64.exe
          - os: darwin
            arch: amd64
            binary_name: imagego-darwin-amd64
          - os: darwin # For Apple Silicon Macs
            arch: arm64
            binary_name: imagego-darwin-arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.2" # From your go.mod file

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          echo "Building for $GOOS/$GOARCH..."
          go build -v -trimpath -ldflags="-s -w" -o ${{ matrix.binary_name }} ./cmd/imagego
          echo "Built ${{ matrix.binary_name }}"

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }} # Artifact name will be the binary name
          path: ${{ matrix.binary_name }} # Path to the file to upload

  create-release:
    name: Create GitHub Release
    needs: build # Depends on the build job completing for all matrix configurations
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create a release and upload assets
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path:
            release-assets # All artifacts will be downloaded into subdirectories here
            # e.g., release-assets/imagego-linux-amd64/imagego-linux-amd64

      - name: List downloaded artifacts (for debugging)
        run: |
          echo "Downloaded artifacts structure:"
          ls -R release-assets

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          # body_path: CHANGELOG.md # Optional: if you have a changelog file
          draft: false
          prerelease: false
          files: |
            release-assets/imagego-linux-amd64/imagego-linux-amd64
            release-assets/imagego-windows-amd64.exe/imagego-windows-amd64.exe
            release-assets/imagego-darwin-amd64/imagego-darwin-amd64
            release-assets/imagego-darwin-arm64/imagego-darwin-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

